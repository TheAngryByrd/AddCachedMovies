//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Title_Disc", "Title_Disc_Target", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetflixCatalogData.Implementation.Title), "Title_Disc_Source", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetflixCatalogData.Implementation.Title))]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Title_Season", "Title_Season_Target", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetflixCatalogData.Implementation.Title), "Title_Season_Source", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetflixCatalogData.Implementation.Title))]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Title_Series", "Title_Series_Target", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetflixCatalogData.Implementation.Title), "Title_Series_Source", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetflixCatalogData.Implementation.Title))]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Title_Movie", "Title_Movie_Target", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetflixCatalogData.Implementation.Title), "Title_Movie_Source", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetflixCatalogData.Implementation.Title))]

#endregion

namespace NetflixCatalogData.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NetflixCatalogDataObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NetflixCatalogDataObjectContext object using the connection string found in the 'NetflixCatalogDataObjectContext' section of the application configuration file.
        /// </summary>
        public NetflixCatalogDataObjectContext() : base("name=NetflixCatalogDataObjectContext", "NetflixCatalogDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NetflixCatalogDataObjectContext object.
        /// </summary>
        public NetflixCatalogDataObjectContext(string connectionString) : base(connectionString, "NetflixCatalogDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NetflixCatalogDataObjectContext object.
        /// </summary>
        public NetflixCatalogDataObjectContext(EntityConnection connection) : base(connection, "NetflixCatalogDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Title> Titles
        {
            get
            {
                if ((_Titles == null))
                {
                    _Titles = base.CreateObjectSet<Title>("Titles");
                }
                return _Titles;
            }
        }
        private ObjectSet<Title> _Titles;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Titles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTitles(Title title)
        {
            base.AddObject("Titles", title);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Title")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Title : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Title object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateModified">Initial value of the DateModified property.</param>
        public static Title CreateTitle(global::System.String id, global::System.DateTime dateModified)
        {
            Title title = new Title();
            title.Id = id;
            title.DateModified = dateModified;
            return title;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = value;
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Synopsis
        {
            get
            {
                return _Synopsis;
            }
            set
            {
                OnSynopsisChanging(value);
                ReportPropertyChanging("Synopsis");
                _Synopsis = value;
                ReportPropertyChanged("Synopsis");
                OnSynopsisChanged();
            }
        }
        private global::System.String _Synopsis;
        partial void OnSynopsisChanging(global::System.String value);
        partial void OnSynopsisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortSynopsis
        {
            get
            {
                return _ShortSynopsis;
            }
            set
            {
                OnShortSynopsisChanging(value);
                ReportPropertyChanging("ShortSynopsis");
                _ShortSynopsis = value;
                ReportPropertyChanged("ShortSynopsis");
                OnShortSynopsisChanged();
            }
        }
        private global::System.String _ShortSynopsis;
        partial void OnShortSynopsisChanging(global::System.String value);
        partial void OnShortSynopsisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AverageRating
        {
            get
            {
                return _AverageRating;
            }
            set
            {
                OnAverageRatingChanging(value);
                ReportPropertyChanging("AverageRating");
                _AverageRating = value;
                ReportPropertyChanged("AverageRating");
                OnAverageRatingChanged();
            }
        }
        private Nullable<global::System.Double> _AverageRating;
        partial void OnAverageRatingChanging(Nullable<global::System.Double> value);
        partial void OnAverageRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReleaseYear
        {
            get
            {
                return _ReleaseYear;
            }
            set
            {
                OnReleaseYearChanging(value);
                ReportPropertyChanging("ReleaseYear");
                _ReleaseYear = value;
                ReportPropertyChanged("ReleaseYear");
                OnReleaseYearChanged();
            }
        }
        private Nullable<global::System.Int32> _ReleaseYear;
        partial void OnReleaseYearChanging(Nullable<global::System.Int32> value);
        partial void OnReleaseYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = value;
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Runtime
        {
            get
            {
                return _Runtime;
            }
            set
            {
                OnRuntimeChanging(value);
                ReportPropertyChanging("Runtime");
                _Runtime = value;
                ReportPropertyChanged("Runtime");
                OnRuntimeChanged();
            }
        }
        private Nullable<global::System.Int32> _Runtime;
        partial void OnRuntimeChanging(Nullable<global::System.Int32> value);
        partial void OnRuntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = value;
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private global::System.String _Rating;
        partial void OnRatingChanging(global::System.String value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = value;
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private global::System.DateTime _DateModified;
        partial void OnDateModifiedChanging(global::System.DateTime value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = value;
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebsiteUrl
        {
            get
            {
                return _WebsiteUrl;
            }
            set
            {
                OnWebsiteUrlChanging(value);
                ReportPropertyChanging("WebsiteUrl");
                _WebsiteUrl = value;
                ReportPropertyChanged("WebsiteUrl");
                OnWebsiteUrlChanged();
            }
        }
        private global::System.String _WebsiteUrl;
        partial void OnWebsiteUrlChanging(global::System.String value);
        partial void OnWebsiteUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NetflixApiId
        {
            get
            {
                return _NetflixApiId;
            }
            set
            {
                OnNetflixApiIdChanging(value);
                ReportPropertyChanging("NetflixApiId");
                _NetflixApiId = value;
                ReportPropertyChanged("NetflixApiId");
                OnNetflixApiIdChanged();
            }
        }
        private global::System.String _NetflixApiId;
        partial void OnNetflixApiIdChanging(global::System.String value);
        partial void OnNetflixApiIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TinyUrl
        {
            get
            {
                return _TinyUrl;
            }
            set
            {
                OnTinyUrlChanging(value);
                ReportPropertyChanging("TinyUrl");
                _TinyUrl = value;
                ReportPropertyChanged("TinyUrl");
                OnTinyUrlChanged();
            }
        }
        private global::System.String _TinyUrl;
        partial void OnTinyUrlChanging(global::System.String value);
        partial void OnTinyUrlChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Title_Disc", "Title_Disc_Target")]
        public Title Disc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("LightSwitchApplication.Title_Disc", "Title_Disc_Target").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("LightSwitchApplication.Title_Disc", "Title_Disc_Target").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> DiscReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("LightSwitchApplication.Title_Disc", "Title_Disc_Target");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("LightSwitchApplication.Title_Disc", "Title_Disc_Target", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Title_Season", "Title_Season_Target")]
        public Title Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("LightSwitchApplication.Title_Season", "Title_Season_Target").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("LightSwitchApplication.Title_Season", "Title_Season_Target").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("LightSwitchApplication.Title_Season", "Title_Season_Target");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("LightSwitchApplication.Title_Season", "Title_Season_Target", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Title_Series", "Title_Series_Target")]
        public Title Series
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("LightSwitchApplication.Title_Series", "Title_Series_Target").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("LightSwitchApplication.Title_Series", "Title_Series_Target").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> SeriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("LightSwitchApplication.Title_Series", "Title_Series_Target");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("LightSwitchApplication.Title_Series", "Title_Series_Target", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Title_Movie", "Title_Movie_Target")]
        public Title Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("LightSwitchApplication.Title_Movie", "Title_Movie_Target").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("LightSwitchApplication.Title_Movie", "Title_Movie_Target").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("LightSwitchApplication.Title_Movie", "Title_Movie_Target");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("LightSwitchApplication.Title_Movie", "Title_Movie_Target", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
