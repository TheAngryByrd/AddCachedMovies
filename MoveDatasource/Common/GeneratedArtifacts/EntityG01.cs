

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Title : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Title entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Title()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Title(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Title> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Title.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Id
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShortName
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.ShortName);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.ShortName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Synopsis
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Synopsis);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Synopsis, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Synopsis_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Synopsis_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Synopsis_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShortSynopsis
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.ShortSynopsis);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.ShortSynopsis, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortSynopsis_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortSynopsis_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortSynopsis_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> AverageRating
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.AverageRating);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.AverageRating, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AverageRating_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AverageRating_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AverageRating_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ReleaseYear
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.ReleaseYear);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.ReleaseYear, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseYear_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseYear_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseYear_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Url
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Url);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Url, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Url_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Url_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Url_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Runtime
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Runtime);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Runtime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runtime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runtime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Runtime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Rating
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Rating);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Rating, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rating_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rating_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rating_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime DateModified
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.DateModified);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.DateModified, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateModified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateModified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateModified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Type
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Type);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string WebsiteUrl
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.WebsiteUrl);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.WebsiteUrl, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WebsiteUrl_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WebsiteUrl_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WebsiteUrl_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string NetflixApiId
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.NetflixApiId);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.NetflixApiId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NetflixApiId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NetflixApiId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NetflixApiId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TinyUrl
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.TinyUrl);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.TinyUrl, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TinyUrl_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TinyUrl_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TinyUrl_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Title Disc
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Disc);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Disc, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Disc_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Disc_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Disc_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Title Season
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Season);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Season, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Season_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Season_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Season_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Title Series
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Series);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Series, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Series_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Series_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Series_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Title Movie
        {
            get
            {
                return global::LightSwitchApplication.Title.DetailsClass.GetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Movie);
            }
            set
            {
                global::LightSwitchApplication.Title.DetailsClass.SetValue(this, global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Movie, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Movie_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Movie_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Movie_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Title,
                global::LightSwitchApplication.Title.DetailsClass,
                global::LightSwitchApplication.Title.DetailsClass.IImplementation,
                global::LightSwitchApplication.Title.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass>.Entry
                __TitleEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass>.Entry(
                    global::LightSwitchApplication.Title.DetailsClass.__Title_CreateNew,
                    global::LightSwitchApplication.Title.DetailsClass.__Title_Created,
                    global::LightSwitchApplication.Title.DetailsClass.__Title_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Title __Title_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Title> es)
            {
                return new global::LightSwitchApplication.Title(es);
            }
            private static void __Title_Created(global::LightSwitchApplication.Title e)
            {
                e.Title_Created();
            }
            private static bool __Title_AllowSaveWithErrors(global::LightSwitchApplication.Title e)
            {
                bool result = false;
                e.Title_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Title.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string> ShortName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.ShortName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string> Synopsis
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Synopsis) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string> ShortSynopsis
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.ShortSynopsis) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<double>> AverageRating
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.AverageRating) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<int>> ReleaseYear
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.ReleaseYear) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string> Url
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Url) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<int>> Runtime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Runtime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string> Rating
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Rating) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.DateTime> DateModified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.DateModified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string> Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string> WebsiteUrl
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.WebsiteUrl) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string> NetflixApiId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.NetflixApiId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string> TinyUrl
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.TinyUrl) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title> Disc
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Disc) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title> Season
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Season) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title> Series
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Series) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title> Movie
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Movie) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string Id { get; set; }
                new string Name { get; set; }
                new string ShortName { get; set; }
                new string Synopsis { get; set; }
                new string ShortSynopsis { get; set; }
                new global::System.Nullable<double> AverageRating { get; set; }
                new global::System.Nullable<int> ReleaseYear { get; set; }
                new string Url { get; set; }
                new global::System.Nullable<int> Runtime { get; set; }
                new string Rating { get; set; }
                new global::System.DateTime DateModified { get; set; }
                new string Type { get; set; }
                new string WebsiteUrl { get; set; }
                new string NetflixApiId { get; set; }
                new string TinyUrl { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Disc { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Season { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Series { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Movie { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry(
                        "Id",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static string _Id_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry
                    ShortName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry(
                        "ShortName",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ShortName_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ShortName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ShortName_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ShortName_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ShortName_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ShortName_OnValueChanged);
                private static void _ShortName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._ShortName, sf);
                }
                private static bool _ShortName_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.ShortName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShortName_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShortName_Validate(r);
                }
                private static string _ShortName_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.ShortName;
                }
                private static void _ShortName_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShortName = v;
                }
                private static void _ShortName_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.ShortName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry
                    Synopsis = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry(
                        "Synopsis",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Synopsis_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Synopsis_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Synopsis_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Synopsis_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Synopsis_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Synopsis_OnValueChanged);
                private static void _Synopsis_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._Synopsis, sf);
                }
                private static bool _Synopsis_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.Synopsis_IsReadOnly(ref result);
                    return result;
                }
                private static void _Synopsis_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Synopsis_Validate(r);
                }
                private static string _Synopsis_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.Synopsis;
                }
                private static void _Synopsis_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Synopsis = v;
                }
                private static void _Synopsis_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.Synopsis_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry
                    ShortSynopsis = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry(
                        "ShortSynopsis",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ShortSynopsis_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ShortSynopsis_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ShortSynopsis_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ShortSynopsis_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ShortSynopsis_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ShortSynopsis_OnValueChanged);
                private static void _ShortSynopsis_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._ShortSynopsis, sf);
                }
                private static bool _ShortSynopsis_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.ShortSynopsis_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShortSynopsis_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShortSynopsis_Validate(r);
                }
                private static string _ShortSynopsis_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.ShortSynopsis;
                }
                private static void _ShortSynopsis_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShortSynopsis = v;
                }
                private static void _ShortSynopsis_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.ShortSynopsis_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<double>>.Entry
                    AverageRating = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<double>>.Entry(
                        "AverageRating",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._AverageRating_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._AverageRating_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._AverageRating_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._AverageRating_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._AverageRating_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._AverageRating_OnValueChanged);
                private static void _AverageRating_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._AverageRating, sf);
                }
                private static bool _AverageRating_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.AverageRating_IsReadOnly(ref result);
                    return result;
                }
                private static void _AverageRating_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AverageRating_Validate(r);
                }
                private static global::System.Nullable<double> _AverageRating_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.AverageRating;
                }
                private static void _AverageRating_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.AverageRating = v;
                }
                private static void _AverageRating_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.AverageRating_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<int>>.Entry
                    ReleaseYear = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ReleaseYear",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ReleaseYear_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ReleaseYear_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ReleaseYear_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ReleaseYear_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ReleaseYear_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._ReleaseYear_OnValueChanged);
                private static void _ReleaseYear_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._ReleaseYear, sf);
                }
                private static bool _ReleaseYear_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.ReleaseYear_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReleaseYear_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReleaseYear_Validate(r);
                }
                private static global::System.Nullable<int> _ReleaseYear_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.ReleaseYear;
                }
                private static void _ReleaseYear_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ReleaseYear = v;
                }
                private static void _ReleaseYear_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.ReleaseYear_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry
                    Url = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry(
                        "Url",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Url_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Url_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Url_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Url_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Url_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Url_OnValueChanged);
                private static void _Url_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._Url, sf);
                }
                private static bool _Url_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.Url_IsReadOnly(ref result);
                    return result;
                }
                private static void _Url_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Url_Validate(r);
                }
                private static string _Url_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.Url;
                }
                private static void _Url_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Url = v;
                }
                private static void _Url_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.Url_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<int>>.Entry
                    Runtime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Runtime",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Runtime_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Runtime_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Runtime_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Runtime_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Runtime_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Runtime_OnValueChanged);
                private static void _Runtime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._Runtime, sf);
                }
                private static bool _Runtime_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.Runtime_IsReadOnly(ref result);
                    return result;
                }
                private static void _Runtime_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Runtime_Validate(r);
                }
                private static global::System.Nullable<int> _Runtime_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.Runtime;
                }
                private static void _Runtime_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Runtime = v;
                }
                private static void _Runtime_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.Runtime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry
                    Rating = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry(
                        "Rating",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Rating_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Rating_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Rating_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Rating_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Rating_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Rating_OnValueChanged);
                private static void _Rating_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._Rating, sf);
                }
                private static bool _Rating_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.Rating_IsReadOnly(ref result);
                    return result;
                }
                private static void _Rating_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Rating_Validate(r);
                }
                private static string _Rating_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.Rating;
                }
                private static void _Rating_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Rating = v;
                }
                private static void _Rating_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.Rating_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.DateTime>.Entry
                    DateModified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.DateTime>.Entry(
                        "DateModified",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._DateModified_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._DateModified_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._DateModified_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._DateModified_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._DateModified_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._DateModified_OnValueChanged);
                private static void _DateModified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._DateModified, sf);
                }
                private static bool _DateModified_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.DateModified_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateModified_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateModified_Validate(r);
                }
                private static global::System.DateTime _DateModified_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.DateModified;
                }
                private static void _DateModified_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.DateModified = global::LightSwitchApplication.Title.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _DateModified_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.DateModified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry
                    Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry(
                        "Type",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Type_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Type_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Type_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Type_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Type_OnValueChanged);
                private static void _Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._Type, sf);
                }
                private static bool _Type_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Type_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Type_Validate(r);
                }
                private static string _Type_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.Type;
                }
                private static void _Type_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Type = v;
                }
                private static void _Type_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.Type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry
                    WebsiteUrl = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry(
                        "WebsiteUrl",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._WebsiteUrl_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._WebsiteUrl_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._WebsiteUrl_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._WebsiteUrl_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._WebsiteUrl_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._WebsiteUrl_OnValueChanged);
                private static void _WebsiteUrl_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._WebsiteUrl, sf);
                }
                private static bool _WebsiteUrl_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.WebsiteUrl_IsReadOnly(ref result);
                    return result;
                }
                private static void _WebsiteUrl_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WebsiteUrl_Validate(r);
                }
                private static string _WebsiteUrl_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.WebsiteUrl;
                }
                private static void _WebsiteUrl_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, string v)
                {
                    d.ImplementationEntity.WebsiteUrl = v;
                }
                private static void _WebsiteUrl_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.WebsiteUrl_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry
                    NetflixApiId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry(
                        "NetflixApiId",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._NetflixApiId_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._NetflixApiId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._NetflixApiId_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._NetflixApiId_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._NetflixApiId_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._NetflixApiId_OnValueChanged);
                private static void _NetflixApiId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._NetflixApiId, sf);
                }
                private static bool _NetflixApiId_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.NetflixApiId_IsReadOnly(ref result);
                    return result;
                }
                private static void _NetflixApiId_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NetflixApiId_Validate(r);
                }
                private static string _NetflixApiId_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.NetflixApiId;
                }
                private static void _NetflixApiId_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, string v)
                {
                    d.ImplementationEntity.NetflixApiId = v;
                }
                private static void _NetflixApiId_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.NetflixApiId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry
                    TinyUrl = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Entry(
                        "TinyUrl",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._TinyUrl_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._TinyUrl_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._TinyUrl_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._TinyUrl_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._TinyUrl_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._TinyUrl_OnValueChanged);
                private static void _TinyUrl_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._TinyUrl, sf);
                }
                private static bool _TinyUrl_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.TinyUrl_IsReadOnly(ref result);
                    return result;
                }
                private static void _TinyUrl_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TinyUrl_Validate(r);
                }
                private static string _TinyUrl_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.TinyUrl;
                }
                private static void _TinyUrl_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TinyUrl = v;
                }
                private static void _TinyUrl_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.TinyUrl_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Entry
                    Disc = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Entry(
                        "Disc",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Disc_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Disc_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Disc_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Disc_GetCoreImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Disc_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Disc_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Disc_Refresh,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Disc_OnValueChanged);
                private static void _Disc_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._Disc, sf);
                }
                private static bool _Disc_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.Disc_IsReadOnly(ref result);
                    return result;
                }
                private static void _Disc_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Disc_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Disc_GetCoreImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.Disc;
                }
                private static global::LightSwitchApplication.Title _Disc_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass>(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Disc, ref d._Disc);
                }
                private static void _Disc_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, global::LightSwitchApplication.Title v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Disc, ref d._Disc, (i, ev) => i.Disc = ev, v);
                }
                private static void _Disc_Refresh(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Disc, ref d._Disc);
                }
                private static void _Disc_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.Disc_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Entry
                    Season = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Entry(
                        "Season",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Season_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Season_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Season_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Season_GetCoreImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Season_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Season_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Season_Refresh,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Season_OnValueChanged);
                private static void _Season_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._Season, sf);
                }
                private static bool _Season_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.Season_IsReadOnly(ref result);
                    return result;
                }
                private static void _Season_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Season_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Season_GetCoreImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.Season;
                }
                private static global::LightSwitchApplication.Title _Season_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass>(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Season, ref d._Season);
                }
                private static void _Season_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, global::LightSwitchApplication.Title v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Season, ref d._Season, (i, ev) => i.Season = ev, v);
                }
                private static void _Season_Refresh(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Season, ref d._Season);
                }
                private static void _Season_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.Season_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Entry
                    Series = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Entry(
                        "Series",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Series_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Series_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Series_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Series_GetCoreImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Series_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Series_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Series_Refresh,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Series_OnValueChanged);
                private static void _Series_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._Series, sf);
                }
                private static bool _Series_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.Series_IsReadOnly(ref result);
                    return result;
                }
                private static void _Series_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Series_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Series_GetCoreImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.Series;
                }
                private static global::LightSwitchApplication.Title _Series_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass>(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Series, ref d._Series);
                }
                private static void _Series_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, global::LightSwitchApplication.Title v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Series, ref d._Series, (i, ev) => i.Series = ev, v);
                }
                private static void _Series_Refresh(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Series, ref d._Series);
                }
                private static void _Series_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.Series_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Entry
                    Movie = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Entry(
                        "Movie",
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Movie_Stub,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Movie_ComputeIsReadOnly,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Movie_Validate,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Movie_GetCoreImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Movie_GetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Movie_SetImplementationValue,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Movie_Refresh,
                        global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties._Movie_OnValueChanged);
                private static void _Movie_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Title.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Data> c, global::LightSwitchApplication.Title.DetailsClass d, object sf)
                {
                    c(d, ref d._Movie, sf);
                }
                private static bool _Movie_ComputeIsReadOnly(global::LightSwitchApplication.Title e)
                {
                    bool result = false;
                    e.Movie_IsReadOnly(ref result);
                    return result;
                }
                private static void _Movie_Validate(global::LightSwitchApplication.Title e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Movie_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Movie_GetCoreImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.ImplementationEntity.Movie;
                }
                private static global::LightSwitchApplication.Title _Movie_GetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass>(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Movie, ref d._Movie);
                }
                private static void _Movie_SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass d, global::LightSwitchApplication.Title v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Movie, ref d._Movie, (i, ev) => i.Movie = ev, v);
                }
                private static void _Movie_Refresh(global::LightSwitchApplication.Title.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Title.DetailsClass.PropertySetProperties.Movie, ref d._Movie);
                }
                private static void _Movie_OnValueChanged(global::LightSwitchApplication.Title e)
                {
                    e.Movie_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data _ShortName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data _Synopsis;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data _ShortSynopsis;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<double>>.Data _AverageRating;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<int>>.Data _ReleaseYear;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data _Url;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.Nullable<int>>.Data _Runtime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data _Rating;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::System.DateTime>.Data _DateModified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data _Type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data _WebsiteUrl;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data _NetflixApiId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, string>.Data _TinyUrl;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Data _Disc;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Data _Season;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Data _Series;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Title, global::LightSwitchApplication.Title.DetailsClass, global::LightSwitchApplication.Title>.Data _Movie;
            
        }
    
        #endregion
    }
    
    #endregion
}
